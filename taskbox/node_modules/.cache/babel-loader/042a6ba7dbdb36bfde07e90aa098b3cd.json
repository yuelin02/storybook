{"ast":null,"code":"var _jsxFileName = \"/Users/yuelin/Documents/01 Personal/Dev/storybook/taskbox/src/components/Task.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nexport default function Task({\n  task: {\n    id,\n    title,\n    state\n  },\n  onArchiveTask,\n  onPinTask\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `list-item ${state}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    defaultChecked: state === 'TASK_ARCHIVED',\n    disabled: true,\n    name: \"checked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"checkbox-custom\",\n    onClick: () => onArchiveTask(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: title,\n    readOnly: true,\n    placeholder: \"Input title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"actions\",\n    onClick: event => event.stopPropagation(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, state !== 'TASK_ARCHIVED' && /*#__PURE__*/React.createElement(\"a\", {\n    onClick: () => onPinTask(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: `icon-star`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }\n  }))));\n} //specify the shape of data that a component expects\n\nTask.propTypes = {\n  task: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    state: PropTypes.string.isRequired\n  }),\n  onArchiveTask: PropTypes.func,\n  onPinTask: PropTypes.func\n};\nTask.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Task\",\n  \"props\": {\n    \"task\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"id\": {\n            \"name\": \"string\",\n            \"required\": true\n          },\n          \"title\": {\n            \"name\": \"string\",\n            \"required\": true\n          },\n          \"state\": {\n            \"name\": \"string\",\n            \"required\": true\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onArchiveTask\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onPinTask\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/Task.js\"] = {\n    name: \"Task\",\n    docgenInfo: Task.__docgenInfo,\n    path: \"src/components/Task.js\"\n  };\n}","map":{"version":3,"sources":["/Users/yuelin/Documents/01 Personal/Dev/storybook/taskbox/src/components/Task.js"],"names":["React","PropTypes","Task","task","id","title","state","onArchiveTask","onPinTask","event","stopPropagation","propTypes","shape","string","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA,IAAI,EAAE;AAACC,IAAAA,EAAD;AAAKC,IAAAA,KAAL;AAAYC,IAAAA;AAAZ,GAAR;AAA6BC,EAAAA,aAA7B;AAA4CC,EAAAA;AAA5C,CAAd,EACX;AACI,sBACA;AAAK,IAAA,SAAS,EAAG,aAAYF,KAAM,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,cAAc,EAAEA,KAAK,KAAK,eAF9B;AAGI,IAAA,QAAQ,EAAE,IAHd;AAII,IAAA,IAAI,EAAC,SAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAOQ;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAkC,IAAA,OAAO,EAAE,MAAMC,aAAa,CAACH,EAAD,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPR,CADJ,eAUI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEC,KAA1B;AAAiC,IAAA,QAAQ,EAAE,IAA3C;AAAiD,IAAA,WAAW,EAAC,aAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAVJ,eAaI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAyB,IAAA,OAAO,EAAEI,KAAK,IAAIA,KAAK,CAACC,eAAN,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,KAAK,KAAK,eAAV,iBACG;AAAG,IAAA,OAAO,EAAE,MAAME,SAAS,CAACJ,EAAD,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAG,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFR,CAbJ,CADA;AAuBP,C,CAED;;AACAF,IAAI,CAACS,SAAL,GAAiB;AACbR,EAAAA,IAAI,EAAEF,SAAS,CAACW,KAAV,CAAgB;AAClBR,IAAAA,EAAE,EAAEH,SAAS,CAACY,MAAV,CAAiBC,UADH;AAElBT,IAAAA,KAAK,EAAEJ,SAAS,CAACY,MAAV,CAAiBC,UAFN;AAGlBR,IAAAA,KAAK,EAAEL,SAAS,CAACY,MAAV,CAAiBC;AAHN,GAAhB,CADO;AAMbP,EAAAA,aAAa,EAAEN,SAAS,CAACc,IANZ;AAObP,EAAAA,SAAS,EAAEP,SAAS,CAACc;AAPR,CAAjB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Task({ task: {id, title, state }, onArchiveTask, onPinTask })\n    {\n        return (\n        <div className={`list-item ${state}`}>\n            <label className=\"checkbox\">\n                <input\n                    type=\"checkbox\"\n                    defaultChecked={state === 'TASK_ARCHIVED'}\n                    disabled={true}\n                    name=\"checked\"\n                    />\n                    <span className=\"checkbox-custom\" onClick={() => onArchiveTask(id)} />   \n            </label>\n            <div className=\"title\">\n                <input type=\"text\" value={title} readOnly={true} placeholder=\"Input title\" />\n            </div>\n            <div className=\"actions\" onClick={event => event.stopPropagation()}>\n                {state !== 'TASK_ARCHIVED' && (\n                    <a onClick={() => onPinTask(id)}>\n                        <span className={`icon-star`} />\n                    </a>\n                )}\n            </div>\n        </div>\n    );\n}\n\n//specify the shape of data that a component expects\nTask.propTypes = {\n    task: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        state: PropTypes.string.isRequired,\n    }),\n    onArchiveTask: PropTypes.func,\n    onPinTask: PropTypes.func,\n};"]},"metadata":{},"sourceType":"module"}