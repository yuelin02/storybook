{"ast":null,"code":"var _jsxFileName = \"/Users/yuelin/Documents/01 Personal/Dev/storybook/taskbox/src/components/TaskList.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Task from './Task';\nimport { connect } from 'react-redux';\nimport { archiveTask, pinTask } from '../lib/redux';\nexport function PureTaskList({\n  loading,\n  tasks,\n  onPinTask,\n  onArchiveTask\n}) {\n  const events = {\n    onPinTask,\n    onArchiveTask\n  };\n  const LoadingRow = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loading-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"glow-checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"glow-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, \"Loading\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 38\n    }\n  }, \"cool\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 56\n    }\n  }, \"state\")));\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, LoadingRow, LoadingRow, LoadingRow, LoadingRow, LoadingRow, LoadingRow);\n  }\n\n  if (tasks.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }, \"You have no tasks\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"subtitle-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, \"Sit back and relax\")));\n  }\n\n  const tasksInOrder = [...tasks.filter(t => t.state === 'TASK_PINNED'), ...tasks.filter(t => t.state !== 'TASK_PINNED')];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, tasksInOrder.map(task => /*#__PURE__*/React.createElement(Task, Object.assign({\n    key: task.id,\n    task: task\n  }, events, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }))));\n}\nPureTaskList.propTypes = {\n  loading: PropTypes.bool,\n  tasks: PropTypes.arrayOf(Task.propTypes.task).isRequired,\n  onPinTask: PropTypes.func.isRequired,\n  onArchiveTask: PropTypes.func.isRequired\n};\nTaskList.defaultProps = {\n  loading: false\n};\nexport default TaskList;\nPureTaskList.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"PureTaskList\",\n  \"props\": {\n    \"loading\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"tasks\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"custom\",\n          \"raw\": \"Task.propTypes.task\"\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"onPinTask\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"onArchiveTask\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/TaskList.js\"] = {\n    name: \"PureTaskList\",\n    docgenInfo: PureTaskList.__docgenInfo,\n    path: \"src/components/TaskList.js\"\n  };\n}","map":{"version":3,"sources":["/Users/yuelin/Documents/01 Personal/Dev/storybook/taskbox/src/components/TaskList.js"],"names":["React","PropTypes","Task","connect","archiveTask","pinTask","PureTaskList","loading","tasks","onPinTask","onArchiveTask","events","LoadingRow","length","tasksInOrder","filter","t","state","map","task","id","propTypes","bool","arrayOf","isRequired","func","TaskList","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Task from './Task';\nimport { connect } from 'react-redux';\nimport { archiveTask, pinTask } from '../lib/redux';\n\nexport function PureTaskList ({ loading, tasks, onPinTask, onArchiveTask }) {\n    const events = {\n        onPinTask,\n        onArchiveTask,\n    };\n\n    const LoadingRow = (\n        <div className = \"loading-item\">\n            <span className = \"glow-checkbox\" />\n            <span className=\"glow-text\">\n                <span>Loading</span> <span>cool</span> <span>state</span>\n            </span>\n        </div>\n    );\n\n    if (loading) {\n        return (\n        <div className=\"list-items\">\n            {LoadingRow}\n            {LoadingRow}\n            {LoadingRow}\n            {LoadingRow}\n            {LoadingRow}\n            {LoadingRow}\n        </div>\n        );\n    }\n\n    if (tasks.length === 0) {\n        return (\n            <div className = \"list-items\">\n                <div className = \"wrapper-message\">\n                    <span className = \"icon-check\" />\n                    <div className = \"title-message\">You have no tasks</div>\n                    <div className = \"subtitle-message\">Sit back and relax</div>\n                </div>\n            </div>\n        );\n    }\n\n    const tasksInOrder = [\n        ...tasks.filter(t => t.state === 'TASK_PINNED'),\n        ...tasks.filter(t => t.state !== 'TASK_PINNED'),\n    ];\n\n    return(\n        <div className=\"list-items\">\n            {tasksInOrder.map(task => (\n                <Task key={task.id} task={task} {...events} />\n            ))}\n        </div>\n    );\n}\n\nPureTaskList.propTypes = {\n    loading: PropTypes.bool,\n    tasks: PropTypes.arrayOf(Task.propTypes.task).isRequired,\n    onPinTask: PropTypes.func.isRequired,\n    onArchiveTask: PropTypes.func.isRequired,\n}\nTaskList.defaultProps = {\n    loading:false,\n}\n\nexport default TaskList;"]},"metadata":{},"sourceType":"module"}